@using FSPBook.Core.Models
@model ProfileModel
@{
    ViewData["Title"] = "Profile";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<style>
    .container {
        margin: 20px;
    }

    /* Profile Container */
    .profile {
        background-color: #f8f9fa; /* Light gray background */
        border-radius: 10px; /* Rounded corners */
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

        /* User Name */
        .profile h2 {
            font-size: 2.5rem; /* Larger text */
            font-weight: 700; /* Bold */
            color: #007bff; /* Bootstrap primary color */
        }

        /* Job Title */
        .profile h3 {
            font-size: 1.25rem; /* Medium text */
            color: #6c757d; /* Bootstrap muted color */
            margin-bottom: 20px; /* Spacing below job title */
        }

        /* Recent Posts Header */
        .profile h4 {
            font-size: 1.5rem; /* Medium-large text */
            font-weight: 600; /* Semi-bold */
            color: #343a40; /* Dark gray */
            border-bottom: 2px solid #dee2e6; /* Add a bottom border */
            padding-bottom: 10px; /* Space below the border */
            margin-top: 30px; /* Space above the header */
        }
    
    /* Align posts to the left */
    #posts-container {
        text-align: left; /* Ensure all content is left-aligned */
    }

    /* Style individual posts */
    .post {
        border: 1px solid #dee2e6; /* Light border around posts */
        border-radius: 8px; /* Rounded corners */
        padding: 15px; /* Add spacing inside posts */
        background-color: #f8f9fa; /* Light background color */
        margin-bottom: 15px; /* Space between posts */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

        /* Style the timestamp */
        .post .created-at {
            font-size: 0.9rem; /* Smaller text size */
            color: #6c757d; /* Muted color */
            margin-bottom: 5px; /* Space below the timestamp */
        }

        /* Style the post content */
        .post .post-content {
            font-size: 1rem; /* Normal text size */
            color: #343a40; /* Darker color for readability */
        }

    h1 {
        margin-bottom: 20px;
    }

    button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

<div class="profile text-center py-4">
    <h2 class="display-4 fw-bold text-primary">@Model.Name</h2>
    <h3 class="fw-normal text-muted">Job Title : @Model.JobTitle</h3>

    <h4 class="mt-4 border-bottom pb-2 text-secondary">Recent Posts</h4>
    <div id="posts-container">
        @Html.Partial("_PostListPartial", Model.Posts)        
    </div>
    <button id="load-more" data-page="0" data-userid="@Model.Id" data-pagesize="1">
        Load More
    </button>
</div>

<script>
    var latestPostId = null;
    document.getElementById("load-more").addEventListener("click", function () {
        const button = this;
        const userId = button.getAttribute("data-userid");
        const page = parseInt(button.getAttribute("data-page")) + 1;
        const container = document.getElementById("posts-container");
        var isHtml = true;

        if (latestPostId == null) {
            const posts = container.querySelectorAll(".post");
            if (posts.length > 0) {
                const lastPost = posts[posts.length - 1];
                latestPostId = lastPost.querySelector(".created-at").dataset.postid;
            }
        }
        const pageSize = button.getAttribute("data-pagesize");
        fetch(`/MVC/Profile/LoadMorePosts`, {
                method: "POST", // Set the HTTP method to POST
                headers: {
                    "Content-Type": "application/json", // Specify the content type
                },
                body: JSON.stringify({
                    PageNumber: page,       // Pass data in the request body
                    LatestPostId: latestPostId,
                    UserId: userId,
                    PageSize: pageSize
                }),
            })
            .then((response) => {
                if (response != undefined) {
                    //Check if response is JSON (handle errors)
                    const contentType = response.headers.get("Content-Type");
                    if (contentType && contentType.includes("application/json")) {
                        console.log(response);
                        isHtml = false;
                        return response.json();
                    }
                    return response.text();
                }
            })
            .then((data) => {
                if (data != undefined && data != null) 
                { 
                    if (isHtml) {
                        container.innerHTML += data; // Append the returned HTML to the container
                        button.setAttribute("data-page", page); // Update the button's data attribute

                        // hide load more button if no more posts
                        var isLastPost = $("#hdnLastPost").val();
                        if (isLastPost == "true") {
                            $("#load-more").css("display", "none");
                        }
                    }
                    else{
                        if (data.status === false) {
                            // Exit flow to avoid appending HTML
                            throw new Error(data.message);
                        }
                    }
                }
            })
            .catch(error => {
                console.error("Error loading posts:", error);
                $('#CommonModalMessage .modal-title').html("Error");
                $('#CommonModalMessage .modal-message').html(error.message);
                $('.modal.show').modal('hide');
                $('#CommonModalMessage').modal('show');
            });
    });
</script>