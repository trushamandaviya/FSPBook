@using FSPBook.Portal.Areas.MVC.Models
@model List<FSPBook.Core.Models.PostModel>
@{
    ViewData["Title"] = "Posts";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}
<style>
    .container {
        margin: 20px;
    }

    /* Style individual posts */
    .post {
        border: 1px solid #dee2e6; /* Light border around posts */
        border-radius: 8px; /* Rounded corners */
        padding: 15px; /* Add spacing inside posts */
        background-color: #f8f9fa; /* Light background color */
        margin-bottom: 15px; /* Space between posts */
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle shadow */
    }

        /* Style the timestamp */
        .post .created-at {
            font-size: 0.9rem; /* Smaller text size */
            color: #6c757d; /* Muted color */
            margin-bottom: 5px; /* Space below the timestamp */
        }

        /* Style the post content */
        .post .post-content {
            font-size: 1rem; /* Normal text size */
            color: #343a40; /* Darker color for readability */
        }

    h1 {
        margin-bottom: 20px;
    }

    button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    .list-group-item a {
        text-decoration: none;
        color: #007bff;
    }

        .list-group-item a:hover {
            text-decoration: underline;
        }

    .list-group-item img {
        border-radius: 5px;
    }

    .list-group-item {
        margin-bottom: 10px;
        padding: 10px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <!-- Main Content -->
        <div class="col-md-9">
            <h3 class="mb-3 border-bottom pb-2 text-secondary">Recent Posts</h3>
            <div id="posts-container">
                @Html.Partial("_LoadMorePosts", Model)                
            </div>
            <button id="load-more" data-page="0">Load More</button>
        </div> 
        
        <!-- News Sidebar -->
        <div class="col-md-3">
            <h3 class="mb-3 border-bottom pb-2 text-secondary">Technology News Feed</h3>
            @if (ViewBag.TechnologyNews != null)
            {
                <ul class="list-group">
                    @foreach (var article in ViewBag.TechnologyNews)
                    {
                        <li class="list-group-item">
                            @if (article.ImageUrl != null)
                            {
                                <img src="@article.ImageUrl" alt="@article.Title" class="img-thumbnail" style="width:100px; height:auto; float:left; margin-right:10px;" />
                            }
                            <a href="@article.Url" target="_blank">@article.Title</a>
                            <p style="margin-top: 5px; color: gray;">
                                <small>@article.Source </small>
                                @if (article.PublishedAt != null)
                                {
                                    <small> - @article.PublishedAt?.ToString("MMMM dd, yyyy HH:mm") </small>
                                }
                            </p>
                            <div style="clear:both;"></div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>No news available.</p>
            }
        </div>
    </div>  
</div>


<script>
    var latestPostId = null;

    $(document).ready(function () {
        $("#load-more").off("click").on("click", function () {
            const button = this;
            const page = parseInt(button.getAttribute("data-page")) + 1;

            const container = document.getElementById("posts-container");
            var isHtml = true;

            if (latestPostId == null) {
                const posts = container.querySelectorAll(".post");
                if (posts.length > 0) {
                    const lastPost = posts[0];
                    latestPostId = lastPost.querySelector(".created-at").dataset.postid;
                }
            }
            fetch(`/MVC/Home/LoadMorePosts`, {
                method: "POST", // Set the HTTP method to POST
                headers: {
                    "Content-Type": "application/json", // Specify the content type
                },
                body: JSON.stringify({
                    PageNumber: page,       // Pass data in the request body
                    LatestPostId: latestPostId,
                    PageSize: @Constants.PageSize
                }),
            })
                .then((response) => {
                    if (response != undefined) {
                        //Check if response is JSON (handle errors)
                        const contentType = response.headers.get("Content-Type");
                        if (contentType && contentType.includes("application/json")) {
                            console.log(response);
                            isHtml = false;
                            return response.json();
                        }
                        return response.text();
                    }
                })
                .then((data) => {
                    console.log(data);
                    if (data != undefined && data != null) {
                        if (isHtml) {
                            container.innerHTML += data; // Append the returned HTML to the container
                            button.setAttribute("data-page", page); // Update the button's data attribute

                            // hide load more button if no more posts
                            var isLastPost = $("#hdnLastPost").val();
                            if (isLastPost == "true") {
                                $("#load-more").css("display", "none");
                            }
                        }
                        else {
                            if (data.status === false) {
                                // Exit flow to avoid appending HTML
                                throw new Error(data.message);
                            }
                        }
                    }
                })
                .catch(error => {
                    console.error("Error loading posts:", error);
                    $('#CommonModalMessage .modal-title').html("Error");
                    $('#CommonModalMessage .modal-message').html(error.message);
                    $('.modal.show').modal('hide');
                    $('#CommonModalMessage').modal('show');
                });
        });
    });
    
</script>